# Generated by Django 3.2.4 on 2021-07-15 03:29

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import module.survey.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='upload/images/%Y/%m/%d')),
                ('h', models.FloatField(blank=True, default=0, null=True)),
                ('w', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'db_table': 'tbl_image',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, help_text='Hãy điền tên khảo sát ở đây!', max_length=255, null=True, verbose_name='Câu khảo sát!')),
            ],
            options={
                'verbose_name': 'Survey',
                'verbose_name_plural': 'Danh sách khảo sát',
                'db_table': 'tbl_survey',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, help_text='Hãy điền câu hỏi ở đây!', max_length=255, null=True, verbose_name='Câu hỏi')),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='question_images', to='survey.image')),
                ('survey', models.ForeignKey(blank=True, help_text='Chọn khảo sát', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='questions', to='survey.survey')),
            ],
            options={
                'verbose_name': 'Câu hỏi',
                'verbose_name_plural': 'Câu hỏi',
                'db_table': 'tbl_question',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, help_text='Hãy điền câu trả lời ở đây!', max_length=255, null=True, verbose_name='Câu trả lời')),
                ('is_deleted', models.BooleanField(blank=True, default=False, null=True)),
                ('question', models.ForeignKey(blank=True, help_text='Chọn khảo sát', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='answer', to='survey.question')),
            ],
            options={
                'verbose_name': 'Câu trả lời',
                'verbose_name_plural': 'Câu trả lời',
                'db_table': 'tbl_answer',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'tbl_user',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', module.survey.models.CustomUserManager()),
            ],
        ),
    ]
